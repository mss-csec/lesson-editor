{"version":3,"sources":["app.js"],"names":["$","ctx","sel","document","querySelector","$$","slice","call","querySelectorAll","globals","mode","theme","editor","preview","cm","CodeMirror","fromTextArea","lineNumbers","styleActiveLine","md","Remarkable","html","linkify","highlight","str","lang","hljs","getLanguage","value","err","highlightAuto","core","ruler","disable","inline","adoc","Asciidoctor","convert","src","splitSrc","split","yaml","metadata","lineNo","line","push","jsyaml","safeLoad","join","e","message","hasOwnProperty","title","render","converted","attributes","showTitle","pp","cpp","replace","_","linenos","code","trim","on","innerHTML","getValue","setOption","addEventListener"],"mappings":"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","file":"app.js","sourcesContent":["(() => {\r\n  const $ = (ctx, sel) => (!sel ? document : ctx).querySelector(sel || ctx),\r\n        $$ = (ctx, sel) => [].slice.call((!sel ? document : ctx).querySelectorAll(sel || ctx));\r\n\r\n  // Global presets\r\n  const globals = {\r\n    mode: 'markdown',\r\n    theme: 'default'\r\n  };\r\n\r\n  // DOM elements\r\n  const editor = $('#editor'),\r\n        preview = $('#preview');\r\n\r\n  // Library initialization\r\n  const cm = CodeMirror.fromTextArea(editor, {\r\n    lineNumbers: true,\r\n    styleActiveLine: true\r\n  });\r\n\r\n  const md = new Remarkable('full', {\r\n    html: true,\r\n    linkify: true,\r\n    highlight: (str, lang) => {\r\n      if (lang && hljs.getLanguage(lang)) {\r\n        try {\r\n          return hljs.highlight(lang, str).value;\r\n        } catch (err) {}\r\n      }\r\n\r\n      try {\r\n        return hljs.highlightAuto(str).value;\r\n      } catch (err) {}\r\n\r\n      return ''; // use external default escaping\r\n    }\r\n  });\r\n  md.core.ruler.disable([ 'abbr' ]);\r\n  md.inline.ruler.disable([ 'ins', 'mark' ]);\r\n\r\n  const adoc = Asciidoctor();\r\n\r\n  // Functions\r\n  let convert = (src) => {\r\n    // Extract YAML\r\n    if (src.slice(0,3) === '---') {\r\n      let splitSrc = src.split('\\n').slice(1),\r\n          yaml = [],\r\n          metadata = {},\r\n          lineNo = 2; // offset by 1 for ending delim\r\n      for (let line of splitSrc) {\r\n        if (line === '---') break;\r\n        yaml.push(line);\r\n        lineNo++;\r\n      }\r\n      try {\r\n        metadata = jsyaml.safeLoad(yaml.join('\\n'));\r\n        src = src.split('\\n').slice(lineNo).join('\\n');\r\n      } catch (e) {\r\n        return `<pre style=\"color:#c00\">${e.message}</pre>`;\r\n      }\r\n\r\n      if (metadata && metadata.hasOwnProperty('title')) {\r\n        src = `${globals.mode === 'markdown' ? '#' : '='} ${metadata.title}\\n` + src;\r\n      }\r\n    }\r\n\r\n    if (globals.mode === 'markdown') {\r\n      return md.render(src);\r\n    } else if (globals.mode === 'asciidoc') {\r\n      let converted = adoc.convert(src, { attributes: { showTitle: true, pp: '++', cpp: 'C++' } });\r\n      converted = converted.replace(\r\n        /\\{%\\s*highlight(\\s+[a-zA-Z0-9]+)?(\\s+[a-zA-Z0-9]+)?\\s*%\\}((?:.|\\s)*?)\\{%\\s*endhighlight\\s*%\\}/gm,\r\n        (_, lang, linenos, code) => {\r\n          lang = lang.trim();\r\n          // linenos = linenos.trim();\r\n          if (lang === 'linenos') {\r\n            [ lang, linenos ] = [ linenos, lang ];\r\n          }\r\n          return `<pre><code class=\"language-${lang}\">${hljs.highlight(lang, code).value}</code></pre>`;\r\n        }\r\n      );\r\n\r\n      return converted;\r\n    } else {\r\n      return src;\r\n    }\r\n  };\r\n\r\n  // Page init\r\n  cm.on('change', () => {\r\n    preview.innerHTML = convert(cm.getValue());\r\n  });\r\n\r\n  cm.setOption('mode', globals.mode);\r\n  cm.setOption('theme', globals.theme);\r\n\r\n  $('#converter').addEventListener('change', () => {\r\n    globals.mode = $('#converter').value;\r\n    preview.innerHTML = convert(cm.getValue());\r\n  });\r\n})();\r\n"]}